//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxcrafter.h"
#include "subinclude.h"

// Declare the bitmap loading function
extern void wxC9ED9InitBitmapResources();

static bool bBitmapLoaded = false;

MainDialogBaseClass::MainDialogBaseClass(wxWindow* parent,
    wxWindowID id,
    const wxString& title,
    const wxPoint& pos,
    const wxSize& size,
    long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if(!bBitmapLoaded) {
	// We need to initialise the default bitmap handler
	wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
	wxC9ED9InitBitmapResources();
	bBitmapLoaded = true;
    }

    wxBoxSizer* mainSizer = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(mainSizer);

    wxStaticBoxSizer* staticBoxSizer35 =
        new wxStaticBoxSizer(new wxStaticBox(this, wxID_ANY, _("Welcome")), wxVERTICAL);

    mainSizer->Add(staticBoxSizer35, 0, wxALL | wxEXPAND, WXC_FROM_DIP(5));

    m_staticText37 = new wxStaticText(this, wxID_ANY,
        _("Hello, hoomans !\nToday is a good day.\nClick 'OK' to do nothing and 'Cancel' or 'Close' to close\nor you "
          "can type in the box:"),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxALIGN_CENTRE);

    staticBoxSizer35->Add(m_staticText37, 0, wxALL | wxALIGN_CENTER | wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));

    wxBoxSizer* boxSizer41 = new wxBoxSizer(wxHORIZONTAL);

    mainSizer->Add(boxSizer41, 1, wxALL | wxALIGN_CENTER_HORIZONTAL, WXC_FROM_DIP(5));

    OpenBtn = new wxButton(this, wxID_ANY, _("Open text"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);

    boxSizer41->Add(OpenBtn, 0, wxALL, WXC_FROM_DIP(5));

    btn_save = new wxButton(this, wxID_ANY, _("Save text"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);

    boxSizer41->Add(btn_save, 0, wxALL, WXC_FROM_DIP(5));

    txtbox =
        new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxTE_MULTILINE);

    mainSizer->Add(txtbox, 0, wxALL | wxEXPAND, WXC_FROM_DIP(5));
    txtbox->SetMinSize(wxSize(-1, 150));

    wxBoxSizer* boxSizer12 = new wxBoxSizer(wxHORIZONTAL);

    mainSizer->Add(boxSizer12, 0, wxALL | wxALIGN_CENTER_HORIZONTAL, WXC_FROM_DIP(5));

    m_buttonOK = new wxButton(this, wxID_OK, _("OK"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_buttonOK->SetDefault();

    boxSizer12->Add(m_buttonOK, 0, wxALL, WXC_FROM_DIP(5));

    SetName(wxT("MainDialogBaseClass"));
    SetSize(wxDLG_UNIT(this, wxSize(-1, -1)));
    if(GetSizer()) {
	GetSizer()->Fit(this);
    }
    if(GetParent()) {
	CentreOnParent(wxVERTICAL);
    } else {
	CentreOnScreen(wxVERTICAL);
    }
    // Connect events
    OpenBtn->Connect(
        wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainDialogBaseClass::OnButton43ButtonClicked), NULL, this);
    btn_save->Connect(
        wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainDialogBaseClass::OnBtn_saveButtonClicked), NULL, this);
}

MainDialogBaseClass::~MainDialogBaseClass()
{
    OpenBtn->Disconnect(
        wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainDialogBaseClass::OnButton43ButtonClicked), NULL, this);
    btn_save->Disconnect(
        wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainDialogBaseClass::OnBtn_saveButtonClicked), NULL, this);
}
